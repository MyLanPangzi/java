apiVersion: v1
kind: Service
metadata:
  name: hello-mongo
  labels:
    app.kubernetes.io/name: hello-mongo
    app.kubernetes.io/instance: hello-mongo-instance
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/part-of: mongo-lab
    app.kubernetes.io/component: web-service
spec:
  type: LoadBalancer
  ports:
    - port: 8080
      targetPort: 8080
      name: http
  selector:
    app.kubernetes.io/name: hello-mongo
    app.kubernetes.io/instance: hello-mongo-instance
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/part-of: mongo-lab
    app.kubernetes.io/component: web-service
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  labels:
    app.kubernetes.io/name: mongo
    app.kubernetes.io/instance: mongo-instance
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/part-of: mongo-lab
    app.kubernetes.io/component: db
spec:
  clusterIP: 'None'
  ports:
    - port: 21017
      targetPort: 21017
      name: tcp
  selector:
    app.kubernetes.io/name: mongo
    app.kubernetes.io/instance: mongo-instance
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/part-of: mongo-lab
    app.kubernetes.io/component: db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-mongo
  labels:
    app.kubernetes.io/name: hello-mongo
    app.kubernetes.io/instance: hello-mongo-instance
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/part-of: mongo-lab
    app.kubernetes.io/component: web-service
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: hello-mongo
      app.kubernetes.io/instance: hello-mongo-instance
      app.kubernetes.io/version: 1.0.0
      app.kubernetes.io/part-of: mongo-lab
      app.kubernetes.io/component: web-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: hello-mongo
        app.kubernetes.io/instance: hello-mongo-instance
        app.kubernetes.io/version: 1.0.0
        app.kubernetes.io/part-of: mongo-lab
        app.kubernetes.io/component: web-service
    spec:
      containers:
        - name: hello-mongo
          image: registry.cn-hangzhou.aliyuncs.com/twocat/hello-mongo
          ports:
            - containerPort: 8080
          command: ["sh","-c","java -cp /app/resources:/app/classes:/app/libs/* com.hiscat.hello.hellomongo.HelloMongoApplication --spring.data.mongodb.host=mongo"]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  labels:
    app.kubernetes.io/name: mongo
    app.kubernetes.io/instance: mongo-instance
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/part-of: mongo-lab
    app.kubernetes.io/component: db
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: mongo
      app.kubernetes.io/instance: mongo-instance
      app.kubernetes.io/version: 1.0.0
      app.kubernetes.io/part-of: mongo-lab
      app.kubernetes.io/component: db
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongo
        app.kubernetes.io/instance: mongo-instance
        app.kubernetes.io/version: 1.0.0
        app.kubernetes.io/part-of: mongo-lab
        app.kubernetes.io/component: db
    spec:
      containers:
        - name: mongo
          image: mongo:4.2.2
          ports:
            - containerPort: 21017
